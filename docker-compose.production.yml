version: '3.3'
services:
  postgres:
    container_name: postgres_db
    image: postgres:10-alpine
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_DB=booking-api
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./docker-volumes/postgresql:/var/lib/postgresql
  postgres_analyst:
    container_name: postgres_analyst
    image: postgres:10-alpine
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_DB=booking-analyst
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./docker-volumes/postgresql_analyst:/var/lib/postgresql
  booking-api:
    build: ./booking-api
    container_name: booking-api
    restart: always
    environment:
      - NODE_ENV=production
      - DB_PORT=5432
      - DB_HOST=postgres
      - DB_ANALYST_HOST=postgres_analyst
    ports:
      - '3000:3000'
    depends_on:
      - 'postgres'
      - 'postgres_analyst'
  booking-frontend:
    build: ./booking-frontend
    container_name: booking-frontend
    restart: always
    environment:
      - NODE_ENV=production
      - API_HOST=booking-api
      - API_PORT=3000
    depends_on:
      - 'booking-api'
    ports:
      - '4000:80'
